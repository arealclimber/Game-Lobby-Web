name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APPLICATION_FOLDER: ~/game-lobby/frontend

jobs:
  build_and_deploy:
    name: Build and Test and Deploy to AWS EC2
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            ${{ github.workspace }}/.next/cache
          key: deps-node-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Test
        run: yarn test

      - name: Build
        run: yarn build

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          port: ${{ vars.EC2_PORT }}
          key: ${{ secrets.EC2_KEY }}
          source: '.next,public,package.json,yarn.lock'
          target: ${{ env.APPLICATION_FOLDER }}

      - name: Install dependencies
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ env.APPLICATION_FOLDER }}
            yarn install --frozen-lockfile

      - name: Start the app on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ env.APPLICATION_FOLDER }}
            fuser -k 3000/tcp
            nohup yarn start > output.log 2>&1 &
